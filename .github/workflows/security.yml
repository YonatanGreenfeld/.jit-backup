name: Workflows generated by the MVS plan
on:
  workflow_dispatch:
    inputs:
       client_payload:
          description: The Client payload
          required: true
jobs:
  static-code-analysis-python:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'a743023f-4803-4b2f-a4a6-b6daa11041a2') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-python'
    runs-on: ubuntu-latest
    steps:
    - name: python-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-bandit-slim:latest
        security_control_args: -r /code -f json -q -ll -iii
        
        dispatch_type: workflow

  static-code-analysis-js:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '4c2c3bec-7e60-4167-baf0-5c5986124652') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-js'
    runs-on: ubuntu-latest
    steps:
    - name: semgrep-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-semgrep-alpine:latest
        security_control_args: --json --config=/semgrep-config.yml --metrics=off --severity=ERROR /code
        
        dispatch_type: workflow

  static-code-analysis-go:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '62fadf4d-41c0-44f0-9741-d59cadf2eac1') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-go'
    runs-on: ubuntu-latest
    steps:
    - name: golang-code-scanning
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-gosec-alpine:latest
        security_control_args: 
        
        dispatch_type: workflow

  docker-scan:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'c1599812-4bae-40c9-8920-89d9469a8f20') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'docker-scan'
    runs-on: ubuntu-latest
    steps:
    - name: trivy-dockerfile-scanner
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-trivy-alpine:latest
        security_control_args: --quiet conf -f json /code
        
        dispatch_type: workflow

  software-component-analysis-python:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'fb51b02f-83a8-4b6c-ac0e-2bd2c9e9d263') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'software-component-analysis-python'
    runs-on: ubuntu-latest
    steps:
    - name: dependency-check-python
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-dependency-check-alpine:latest
        security_control_args: --scan /code --enableExperimental --disableJar --disableRubygems --disableBundleAudit --disableCocoapodsAnalyzer --disableSwiftPackageManagerAnalyzer --disableSwiftPackageResolvedAnalyzer --disableAutoconf --disableCmake --disableComposer --disableCpan --disableNuspec --disableNugetconf --disableAssembly --disableGolangDep --disableGolangMod --disableNodeJS --disableYarnAudit --disableNodeAudit --format JSON --noupdate --out /tmp/report.json --log /code/error.txt
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow

  software-component-analysis-js:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '49cd95da-9035-4f76-8cb1-6a489e630830') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'software-component-analysis-js'
    runs-on: ubuntu-latest
    steps:
    - name: dependency-check-node
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-npm-audit-slim:latest
        security_control_args: audit --json --production
        
        dispatch_type: workflow

  software-component-analysis-go:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '300fa37f-8826-49dc-8e97-949a8e51f2b2') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'software-component-analysis-go'
    runs-on: ubuntu-latest
    steps:
    - name: nancy
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-nancy-alpine:latest
        security_control_args: 
        
        dispatch_type: workflow

  iac-misconfig-detection:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'cbcf2b80-8fae-4a9a-91e6-757bb3cc4e38') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'iac-misconfig-detection'
    runs-on: ubuntu-latest
    steps:
    - name: cloud-infrastructure-misconfiguration
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-kics-alpine:latest
        security_control_args: scan -p /code -o /code/jit-report -f json --exclude-severities INFO,MEDIUM,LOW
        security_control_output_file: /code/jit-report/results.json
        dispatch_type: workflow

  secret-detection:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, '13d7949c-3792-4145-86d2-239f0ddc6b1b') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'secret-detection'
    runs-on: ubuntu-latest
    steps:
    - name: secrets-detection
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-gitleaks-alpine:latest
        security_control_args: detect --config /config/gitleaks.toml --source /code -v --report-format json --report-path /tmp/report.json --redact --log-opts --no-git
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow
