name: Workflows generated by the MVS plan
on:
  workflow_dispatch:
    inputs:
       client_payload:
          description: The Client payload
          required: true
jobs:
  static-code-analysis-python:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'Run Bandit') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-python'
    runs-on: ubuntu-latest
    steps:
    - name: u-n- -B-a-n-d-i
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-bandit-slim:latest
        security_control_args: -r /code -f json -q -ll -iii
        
        dispatch_type: workflow

  static-code-analysis-js:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'Run semgrep') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-js'
    runs-on: ubuntu-latest
    steps:
    - name: u-n- -s-e-m-g-r-e
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-semgrep-alpine:latest
        security_control_args: --json --config=/semgrep-config.yml --metrics=off --severity=ERROR /code
        
        dispatch_type: workflow

  static-code-analysis-go:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'Run Go') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-go'
    runs-on: ubuntu-latest
    steps:
    - name: u-n- -G
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-gosec-alpine:latest
        security_control_args: 
        
        dispatch_type: workflow

  software-component-analysis-python:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'Run Dependency Check') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'software-component-analysis-python'
    runs-on: ubuntu-latest
    steps:
    - name: u-n- -D-e-p-e-n-d-e-n-c-y- -C-h-e-c
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-dependency-check-alpine:latest
        security_control_args: --scan /code --enableExperimental --disableJar --disableRubygems --disableBundleAudit --disableCocoapodsAnalyzer --disableSwiftPackageManagerAnalyzer --disableSwiftPackageResolvedAnalyzer --disableAutoconf --disableCmake --disableComposer --disableCpan --disableNuspec --disableNugetconf --disableAssembly --disableGolangDep --disableGolangMod --disableNodeJS --disableYarnAudit --disableNodeAudit --format JSON --noupdate --out /tmp/report.json --log /code/error.txt
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow

  software-component-analysis-js:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'Run npm audit') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'software-component-analysis-js'
    runs-on: ubuntu-latest
    steps:
    - name: u-n- -n-p-m- -a-u-d-i
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-npm-audit-slim:latest
        security_control_args: audit --json --production
        
        dispatch_type: workflow

  software-component-analysis-go:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'Run nancy') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'software-component-analysis-go'
    runs-on: ubuntu-latest
    steps:
    - name: u-n- -n-a-n-c
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-nancy-alpine:latest
        security_control_args: 
        
        dispatch_type: workflow

  secret-detection:
    if: contains( fromJSON(github.event.inputs.client_payload).payload.control_ids, 'Run Gitleaks') || fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'secret-detection'
    runs-on: ubuntu-latest
    steps:
    - name: u-n- -G-i-t-l-e-a-k
      uses: jitsecurity-controls/jit-github-action@v1.5
      with:
        docker_user: jit-bot
        docker_password: Z2hwX1JrdUpqZk5QTk5XWmpzVDRZb0J0Z3ZCNnBJOGtNMDNBbDlzMAo=
        security_control: ghcr.io/jitsecurity-controls/control-gitleaks-alpine:latest
        security_control_args: detect --config /config/gitleaks.toml --source /code -v --report-format json --report-path /tmp/report.json --redact --log-opts --no-git
        security_control_output_file: /tmp/report.json
        dispatch_type: workflow
